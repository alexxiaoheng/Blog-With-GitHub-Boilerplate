<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><id>/</id><title>小皮的菜园子</title><updated>2020-01-08T15:11:48.288490+08:06</updated><author><name>熊猫小A</name><email>zch@began.me</email></author><link href="/" rel="alternate"/><generator uri="http://lkiesow.github.io/python-feedgen" version="0.8.0">python-feedgen</generator><logo>${static_prefix}logo.png</logo><subtitle>厚积薄发。</subtitle><entry><id>/archives/alfred/</id><title>Mac效率工具Alfred实现OCR</title><updated>2020-01-08T15:11:48.288623+00:00</updated><author><name>小皮</name><email>zch@began.me</email><uri>https://blog.began.me</uri></author><content>&lt;h2&gt;Alfred是什么&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.alfredapp.com/"&gt;Alfred&lt;/a&gt;是macOS的应用程序启动器和生产力应用程序。在Mac上可以通过Alfred快捷的打开App、执行系统指令、执行脚本、快速的在想要的网站搜索关键词（如谷歌、百度、维基百科、淘宝等）。&lt;/p&gt;
&lt;p&gt;以上介绍的都是Alfred的基本功能，除此之外，它还可以编写Workflow来实现更多的功能。本文将介绍如何通过Workflow实现OCR文字识别，提高工作效率。&lt;/p&gt;
&lt;p&gt;&lt;figure class="pswp-item" style="flex: 79.7872340425532" data-width="600" data-height="376"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/xiaop1/Blog-With-GitHub-Boilerplate@gh-pages/archives/assets/085e4f7406381202c6d79c9e5c1bd80c.gif" alt="Alfred search" /&gt;&lt;figcaption&gt;Alfred search&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;基于Workflow的OCR文字识别&lt;/h2&gt;
&lt;h3&gt;首先下载Alfred&lt;/h3&gt;
&lt;p&gt;第一步&lt;a href="https://xclient.info/s/alfred.html"&gt;下载Alfred&lt;/a&gt;，确保其正常工作。&lt;/p&gt;
&lt;h3&gt;下载OCR Workflow&lt;/h3&gt;
&lt;p&gt;接着在Github上&lt;a href="https://github.com/oott123/alfred-clipboard-ocr"&gt;下载OCR Workflow&lt;/a&gt;，本Workflow为热心网友制作，可以按照其介绍的使用说明部署。&lt;/p&gt;
&lt;h3&gt;截图并调用Alfred实现OCR&lt;/h3&gt;
&lt;p&gt;&lt;figure class="pswp-item" style="flex: 127.65957446808511" data-width="600" data-height="235"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/xiaop1/Blog-With-GitHub-Boilerplate@gh-pages/archives/assets/5853cda9e3e276a747eb5aaec87de957.gif" alt="Alfred OCR" /&gt;&lt;figcaption&gt;Alfred OCR&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;本文主要通过Alfred这款效率工具，在其基本功能的基础上介绍其基于Workflow文字识别的实现。通过筛选网上现有的Workflow，挑选出效果最好的一款，且其本身的使用说明已经比较详尽，按照其步骤操作基本可以实现其功能。&lt;/p&gt;
&lt;p&gt;基于此Workflow实现的文字OCR识别准确率高，并且能够识别换行，操作简单不用额外下载软件，并且完全免费，对标市面上已有的付费软件，使用体验优于付费软件。&lt;/p&gt;
</content><link href="/archives/alfred/" rel="alternate"/><published>2019-12-31T13:32:00+08:06</published></entry><entry><id>/archives/sublime/</id><title>Win下搭建Sublime的C语言环境</title><updated>2020-01-08T15:11:48.288570+00:00</updated><author><name>小皮</name><email>zch@began.me</email><uri>https://blog.began.me</uri></author><content>&lt;h2&gt;Sublime安装&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.sublimetext.com/"&gt;Sublime&lt;/a&gt;Sublime Text 是一款用于代码、标记和散文的精致文本编辑器。Sublime的安装可以在官网或者百度中搜索安装包，安装很简单（无需安装到C盘）。&lt;/p&gt;
&lt;p&gt;Sublime不仅可以用来当作文本编辑器，同时可以通过安装C、Python等语言的环境来当作简单的编译器来使用（不支持代码调试）。而且Sublime可以安装数以万计的插件，来提高工作效率。&lt;/p&gt;
&lt;p&gt;&lt;figure class="pswp-item" style="flex: 103.09278350515464" data-width="600" data-height="291"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/xiaop1/Blog-With-GitHub-Boilerplate@gh-pages/archives/assets/7c0f71d0da142d706f9f76c1d39f2269.gif" alt="Alfred search" /&gt;&lt;figcaption&gt;Alfred search&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;TDM-GCC安装&lt;/h2&gt;
&lt;p&gt;MinGW是Windows的Minimallist GNU的缩写，是用于本机Microsoft Windows应用程序的简约开发环境。&lt;/p&gt;
&lt;p&gt;网上常见的教程为使用MinGW环境，然而MinGW更新缓慢而且安装后可能出现问题，这里推荐使用&lt;a href="http://tdm-gcc.tdragon.net/download"&gt;TDM-GCC官网下载&lt;/a&gt;。（无需安装到C盘）&lt;/p&gt;
&lt;p&gt;安装后最重要的一步为配置系统变量，按照你所安装路径配置系统变量，配置过程如下图所示。配置后，在开始中输入CMD，在命令提示窗口执行&lt;code&gt;gcc --help&lt;/code&gt;，如果能看到编译环境的帮助页面说明配置成功。&lt;/p&gt;
&lt;p&gt;&lt;figure class="pswp-item" style="flex: 110.8108108108108" data-width="1640" data-height="740"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/xiaop1/Blog-With-GitHub-Boilerplate@gh-pages/archives/assets/bc3c2fb2d6bf962859aac7fc7c616618.png" alt="配置系统变量" /&gt;&lt;figcaption&gt;配置系统变量&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;Sublime配置&lt;/h2&gt;
&lt;p&gt;安装好C语言环境后，还有最后一步就是配置Build System，Sublime需要运行Build System才能执行代码。&lt;/p&gt;
&lt;p&gt;在工具栏找到&lt;code&gt;Tools-&amp;gt;Build System-&amp;gt;New Build System&lt;/code&gt;，将下面的代码复制到你新建的Build System中，保存为&lt;code&gt;c.sublime-build&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gcc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-Wall&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;${file}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-o&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;${file_path}/${file_base_name}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;file_regex&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;working_dir&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;${file_path}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;selector&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;source.c, source.c++&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;encoding&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;cp936&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;variants&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Run&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gcc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-Wall&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;${file}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-o&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;${file_path}/${file_base_name}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;amp;&amp;amp;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;${file_path}/${file_base_name}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;RunInCommand&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gcc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-Wall&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;${file}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-o&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;${file_path}/${file_base_name}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;amp;&amp;amp;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;${file_path}/${file_base_name} &amp;amp; echo.&amp;amp;pause&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;RunInShell&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;shell_cmd&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; start cmd /c &lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;${file_path}/${file_base_name}&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;pause&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; &amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;新建一个C文件，然后保存后输入简单的代码，按CTRL+Shift+b，就会显示你将要用什么来编译它，如果你是按照我上面的代码配置的话，你将看到C-Run、C-RunInCommand、C-RunInShell其中你点C-Run，你就可向下图一样显示了。下次运行代码，你就可以按CTRL+b就可以运行了，这个是表示接着用上次编译方式进行。&lt;/p&gt;
&lt;p&gt;&lt;figure class="pswp-item" style="flex: 89.06542056074767" data-width="953" data-height="535"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/xiaop1/Blog-With-GitHub-Boilerplate@gh-pages/archives/assets/ddc7ba097fd051be8faed8cd8b8b7f5c.jpg" alt="成功运行" /&gt;&lt;figcaption&gt;成功运行&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;本文通过说明在Win下如何搭建Sublime的C语言环境，介绍了一种轻量级编译代码的方式，通过这种方式不仅可以编译C语言，同理也可以编译Python等语言。同时借助其强大的插件，可以几乎替代代码编译器。&lt;/p&gt;
</content><link href="/archives/sublime/" rel="alternate"/><published>2020-01-08T22:12:00+08:06</published></entry></feed>